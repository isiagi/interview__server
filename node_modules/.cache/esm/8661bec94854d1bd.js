let express,Protect,UserRouter,PercelRouter;_485‍.x([["default",()=>_485‍.o]]);_485‍.w("express",[["default",["express"],function(v){express=v}]]);_485‍.w("../middleware/auth",[["default",["Protect"],function(v){Protect=v}]]);_485‍.w("../controllers/userController",[["default",["UserRouter"],function(v){UserRouter=v}]]);_485‍.w("../controllers/percelController",[["default",["PercelRouter"],function(v){PercelRouter=v}]]);






const router = express.Router();

router.route("/register").post(UserRouter.register);

router.route("/login").post(UserRouter.login);

router.route("/forgotPassword").post(UserRouter.forgotPassword);
router.route("/passwordreset/:resetToken").post(UserRouter.resetPassword);

router.route("/percel/all").get(Protect, PercelRouter.getAll);
router.route("/percel/create").post(Protect, PercelRouter.postProduct);
router.route("/percel/:id").delete(Protect, PercelRouter.deleteProduct);

_485‍.d(router);
